{"ast":null,"code":"var _jsxFileName = \"/Users/coder/Documents/The Odin Project/repos/memory-card/react-memory-card/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport data from \"./assets/data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [currentLevel, setLevel] = useState(1);\n  const [currentCards, setCurrentCards] = useState(data.data[0]);\n  const [totalLives, setTotalLives] = useState(1);\n  const [keyPressCount, setKeyPressCount] = useState(-1);\n\n  // Add event listener on keydown\n  document.addEventListener('keydown', event => {\n    var name = event.key;\n    var code = event.code;\n    // Alert the key name and key code on keydown\n    console.log(`Key pressed ${name} \\r\\n Key code value: ${code}`);\n  }, false);\n  const incrementCurrentScore = () => {\n    setCurrentScore(currentScore + 1);\n    if (currentScore + 1 > bestScore) updateBestScore();\n  };\n  const incrementLevel = () => {\n    setCurrentCards(data.data[currentLevel]);\n    setLevel(currentLevel + 1);\n  };\n  const updateBestScore = () => {\n    setBestScore(currentScore + 1);\n  };\n  const incrementTotalLives = () => {\n    setTotalLives(30);\n  };\n  const madeAMistake = () => {\n    if (totalLives === 1) {\n      initializeGame();\n    } else {\n      setTotalLives(totalLives - 1);\n    }\n  };\n  const initializeGame = () => {\n    console.log(`You Lost at Score: ${currentScore}`);\n\n    //set current Score to 0, set Level to 1, set current Cards to Level 1\n    setCurrentScore(0);\n    setLevel(1);\n    setCurrentCards(data.data[0]);\n  };\n  const upUpDownDown = () => {\n    incrementTotalLives();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      currentScore: currentScore,\n      bestScore: bestScore,\n      totalLives: totalLives\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      currentCards: currentCards,\n      incrementCurrentScore: incrementCurrentScore,\n      incrementLevel: incrementLevel,\n      madeAMistake: madeAMistake\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"RKOyquN5SuN7Zez0b3CYIVU4oEk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Body","Footer","data","jsxDEV","_jsxDEV","App","_s","currentScore","setCurrentScore","bestScore","setBestScore","currentLevel","setLevel","currentCards","setCurrentCards","totalLives","setTotalLives","keyPressCount","setKeyPressCount","document","addEventListener","event","name","key","code","console","log","incrementCurrentScore","updateBestScore","incrementLevel","incrementTotalLives","madeAMistake","initializeGame","upUpDownDown","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/coder/Documents/The Odin Project/repos/memory-card/react-memory-card/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport data from \"./assets/data.json\";\n\nconst App = () => {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [currentLevel, setLevel] = useState(1);\n  const [currentCards, setCurrentCards] = useState(data.data[0]);\n  const [totalLives, setTotalLives] = useState(1);\n  const [keyPressCount, setKeyPressCount] = useState(-1);\n\n  // Add event listener on keydown\ndocument.addEventListener('keydown', (event) => {\n  var name = event.key;\n  var code = event.code;\n  // Alert the key name and key code on keydown\n  console.log(`Key pressed ${name} \\r\\n Key code value: ${code}`);\n}, false);\n\n  const incrementCurrentScore = () => {\n    setCurrentScore(currentScore + 1);\n\n    if (currentScore + 1 > bestScore) updateBestScore();\n  };\n\n  const incrementLevel = () => {\n    setCurrentCards(data.data[currentLevel]);\n    setLevel(currentLevel + 1);\n  };\n\n  const updateBestScore = () => {\n    setBestScore(currentScore + 1);\n  };\n\n  const incrementTotalLives = () => {\n    setTotalLives(30);\n  };\n\n  const madeAMistake = () => {\n    if (totalLives === 1) {\n      initializeGame();\n    } else {\n      setTotalLives(totalLives - 1);\n    }\n  };\n\n  const initializeGame = () => {\n    console.log(`You Lost at Score: ${currentScore}`);\n\n    //set current Score to 0, set Level to 1, set current Cards to Level 1\n    setCurrentScore(0);\n    setLevel(1);\n    setCurrentCards(data.data[0]);\n  };\n\n  const upUpDownDown = () => {\n    incrementTotalLives();\n  };\n\n  return (\n    <div>\n      <Header\n        currentScore={currentScore}\n        bestScore={bestScore}\n        totalLives={totalLives}\n      />\n      <Body\n        currentCards={currentCards}\n        incrementCurrentScore={incrementCurrentScore}\n        incrementLevel={incrementLevel}\n        madeAMistake={madeAMistake}\n      />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}