{"ast":null,"code":"var _jsxFileName = \"/Users/coder/Documents/The Odin Project/repos/memory-card/react-memory-card/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport database from \"./assets/Database.json\";\nimport konamiCode from \"./assets/KonamiCode.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const dataGenerator = size => {\n    let tempCards = [];\n    for (let i = 0; i < size; i++) {\n      fetch(\"https://picsum.photos/300/\").then(response => {\n        console.log(response.url);\n        tempCards.push({\n          picture: response.url,\n          name: i + \"\",\n          hasBeenSelected: false\n        });\n      }).then(() => {\n        console.log(tempCards);\n      }).catch(error => {\n        // handle the error\n      });\n    }\n    //console.log(tempCards)\n    //return tempCards;\n  };\n\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [currentLevel, setLevel] = useState(1);\n  //const [currentCards, setCurrentCards] = useState(dataGenerator(2));\n  const [currentCards, setCurrentCards] = useState(database.data[0]);\n  const [totalLives, setTotalLives] = useState(1);\n  const [keyUpCount, setKeyUpCount] = useState(0);\n  //let keyUpCount = 0;\n  const [codeIsActivated, setCodeIsActivated] = useState(false);\n  //let codeIsActivated = false;\n\n  const incrementCurrentScore = () => {\n    setCurrentScore(currentScore + 1);\n    if (currentScore + 1 > bestScore) updateBestScore();\n  };\n  const incrementLevel = () => {\n    setCurrentCards(dataGenerator(currentLevel + 1));\n    //setCurrentCards(database.data[currentLevel]);\n    setLevel(currentLevel + 1);\n  };\n  const updateBestScore = () => {\n    setBestScore(currentScore + 1);\n  };\n  const madeAMistake = () => {\n    if (totalLives === 1) {\n      initializeGame();\n    } else {\n      setTotalLives(totalLives - 1);\n    }\n  };\n  const initializeGame = () => {\n    console.log(`You Lost at Score: ${currentScore}`);\n\n    //set current Score to 0, set Level to 1, set current Cards to Level 1, deactivate code, set lives to 1\n    setCurrentScore(0);\n    setLevel(1);\n    setCurrentCards(database.data[0]);\n    setCodeIsActivated(false);\n    setTotalLives(1);\n  };\n  const incrementTotalLives = () => {\n    if (!codeIsActivated) {\n      setTotalLives(3);\n      setCodeIsActivated(true);\n    }\n  };\n  const upUpDownDown = event => {\n    if (!codeIsActivated) {\n      let code = event.code;\n\n      //if the current code hasn't completed the konami code but hasn't had a mistake yet either\n      if (keyUpCount < konamiCode.data.length - 1) {\n        //if the next keyup is the right key for konami code, continue waiting for next key\n        if (konamiCode.data[keyUpCount] === code) {\n          setKeyUpCount(keyUpCount + 1);\n        } //if the next keyup is the wrong key for konami code, start over\n        else {\n          setKeyUpCount(0);\n        } //if the current code is equal to the konami code\n      } else {\n        setKeyUpCount(0);\n        incrementTotalLives();\n      }\n    }\n  };\n  useEffect(() => {\n    window.addEventListener(\"keyup\", upUpDownDown);\n    dataGenerator();\n    return () => {\n      window.removeEventListener(\"keyup\", upUpDownDown);\n    };\n  });\n  useEffect(() => {\n    setCurrentCards(dataGenerator(currentLevel + 1));\n  }, [currentLevel]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      currentScore: currentScore,\n      currentLevel: currentLevel,\n      bestScore: bestScore,\n      codeIsActivated: codeIsActivated,\n      totalLives: totalLives\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      currentCards: currentCards,\n      setCurrentCards: setCurrentCards,\n      incrementCurrentScore: incrementCurrentScore,\n      incrementLevel: incrementLevel,\n      madeAMistake: madeAMistake\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"qSFexqBk7srBnEraLTsdEmlb7/A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Body","Footer","database","konamiCode","jsxDEV","_jsxDEV","App","_s","dataGenerator","size","tempCards","i","fetch","then","response","console","log","url","push","picture","name","hasBeenSelected","catch","error","currentScore","setCurrentScore","bestScore","setBestScore","currentLevel","setLevel","currentCards","setCurrentCards","data","totalLives","setTotalLives","keyUpCount","setKeyUpCount","codeIsActivated","setCodeIsActivated","incrementCurrentScore","updateBestScore","incrementLevel","madeAMistake","initializeGame","incrementTotalLives","upUpDownDown","event","code","length","window","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/coder/Documents/The Odin Project/repos/memory-card/react-memory-card/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport database from \"./assets/Database.json\";\nimport konamiCode from \"./assets/KonamiCode.json\";\n\nconst App = () => {\n  const dataGenerator = (size) => {\n    let tempCards = [];\n    for (let i = 0; i < size; i++) {\n      fetch(\"https://picsum.photos/300/\")\n        .then((response) => {\n          console.log(response.url);\n          tempCards.push({\n            picture: response.url,\n            name: i + \"\",\n            hasBeenSelected: false,\n          });\n        })\n        .then(() => {\n          console.log(tempCards);\n        })\n        .catch((error) => {\n          // handle the error\n        });\n    }\n    //console.log(tempCards)\n    //return tempCards;\n  };\n\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [currentLevel, setLevel] = useState(1);\n  //const [currentCards, setCurrentCards] = useState(dataGenerator(2));\n  const [currentCards, setCurrentCards] = useState(database.data[0]);\n  const [totalLives, setTotalLives] = useState(1);\n\n  const [keyUpCount, setKeyUpCount] = useState(0);\n  //let keyUpCount = 0;\n  const [codeIsActivated, setCodeIsActivated] = useState(false);\n  //let codeIsActivated = false;\n\n  const incrementCurrentScore = () => {\n    setCurrentScore(currentScore + 1);\n\n    if (currentScore + 1 > bestScore) updateBestScore();\n  };\n\n  const incrementLevel = () => {\n    setCurrentCards(dataGenerator(currentLevel + 1));\n    //setCurrentCards(database.data[currentLevel]);\n    setLevel(currentLevel + 1);\n  };\n\n  const updateBestScore = () => {\n    setBestScore(currentScore + 1);\n  };\n\n  const madeAMistake = () => {\n    if (totalLives === 1) {\n      initializeGame();\n    } else {\n      setTotalLives(totalLives - 1);\n    }\n  };\n\n  const initializeGame = () => {\n    console.log(`You Lost at Score: ${currentScore}`);\n\n    //set current Score to 0, set Level to 1, set current Cards to Level 1, deactivate code, set lives to 1\n    setCurrentScore(0);\n    setLevel(1);\n    setCurrentCards(database.data[0]);\n    setCodeIsActivated(false);\n    setTotalLives(1);\n  };\n\n  const incrementTotalLives = () => {\n    if (!codeIsActivated) {\n      setTotalLives(3);\n      setCodeIsActivated(true);\n    }\n  };\n\n  const upUpDownDown = (event) => {\n    if (!codeIsActivated) {\n      let code = event.code;\n\n      //if the current code hasn't completed the konami code but hasn't had a mistake yet either\n      if (keyUpCount < konamiCode.data.length - 1) {\n        //if the next keyup is the right key for konami code, continue waiting for next key\n        if (konamiCode.data[keyUpCount] === code) {\n          setKeyUpCount(keyUpCount + 1);\n        } //if the next keyup is the wrong key for konami code, start over\n        else {\n          setKeyUpCount(0);\n        } //if the current code is equal to the konami code\n      } else {\n        setKeyUpCount(0);\n        incrementTotalLives();\n      }\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"keyup\", upUpDownDown);\n    dataGenerator();\n\n    return () => {\n      window.removeEventListener(\"keyup\", upUpDownDown);\n    };\n  });\n\n  useEffect(() => {\n    setCurrentCards(dataGenerator(currentLevel + 1));\n  }, [currentLevel]);\n\n  return (\n    <div>\n      <Header\n        currentScore={currentScore}\n        currentLevel={currentLevel}\n        bestScore={bestScore}\n        codeIsActivated={codeIsActivated}\n        totalLives={totalLives}\n      />\n      <Body\n        currentCards={currentCards}\n        setCurrentCards={setCurrentCards}\n        incrementCurrentScore={incrementCurrentScore}\n        incrementLevel={incrementLevel}\n        madeAMistake={madeAMistake}\n      />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}