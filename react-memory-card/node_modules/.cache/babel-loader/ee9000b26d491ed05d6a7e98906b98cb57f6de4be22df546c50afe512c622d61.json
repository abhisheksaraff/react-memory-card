{"ast":null,"code":"var _jsxFileName = \"/Users/coder/Documents/The Odin Project/repos/memory-card/react-memory-card/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport database from \"./assets/Database.json\";\nimport konamiCode from \"./assets/KonamiCode.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [currentLevel, setLevel] = useState(1);\n  const [currentCards, setCurrentCards] = useState(database.data[0]);\n  const [totalLives, setTotalLives] = useState(1);\n  const [keyUpCount, setKeyUpCount] = useState(0);\n  //let keyUpCount = 0;\n  const [codeIsActivated, setCodeIsActivated] = useState(false);\n  //let codeIsActivated = false;\n\n  const incrementCurrentScore = () => {\n    setCurrentScore(currentScore + 1);\n    if (currentScore + 1 > bestScore) updateBestScore();\n  };\n  const incrementLevel = () => {\n    setCurrentCards(database.data[currentLevel]);\n    setLevel(currentLevel + 1);\n  };\n  const updateBestScore = () => {\n    setBestScore(currentScore + 1);\n  };\n  const madeAMistake = () => {\n    if (totalLives === 1) {\n      initializeGame();\n    } else {\n      setTotalLives(totalLives - 1);\n    }\n  };\n  const initializeGame = () => {\n    console.log(`You Lost at Score: ${currentScore}`);\n\n    //set current Score to 0, set Level to 1, set current Cards to Level 1\n    setCurrentScore(0);\n    setLevel(1);\n    setCurrentCards(database.data[0]);\n  };\n  const upUpDownDown = event => {\n    let name = event.key;\n    let code = event.code;\n    let tempKeyUpCount = keyUpCount;\n    console.log(konamiCode.data[tempKeyUpCount] === code);\n    if (tempKeyUpCount < konamiCode.data.length - 1) {\n      console.log(\"check \" + konamiCode.data[tempKeyUpCount]);\n      //if the current code hasn't completed the konami code but hasn't had a mistake yet either\n      if (konamiCode.data[tempKeyUpCount] === code) {\n        tempKeyUpCount++;\n        console.log(tempKeyUpCount);\n        //if the next keyup is the right key for konami code, continue waiting for next key\n      } else {\n        //if the next keyup is the wrong key for konami code, start over\\\n        tempKeyUpCount = 0;\n        console.log(\"bye\");\n      }\n    } else {\n      //if the current code is equal to the konami code\n      tempKeyUpCount = 0;\n      incrementTotalLives();\n      document.removeEventListener(\"keyup\", upUpDownDown);\n      console.log(\"uh uh\");\n    }\n    setKeyUpCount(tempKeyUpCount);\n    console.log(tempKeyUpCount + \" \" + code + \" \" + konamiCode.data[tempKeyUpCount]);\n  };\n  const incrementTotalLives = () => {\n    if (!codeIsActivated) {\n      setTotalLives(30);\n      setCodeIsActivated(true);\n      //codeIsActivated = true;\n    }\n  };\n\n  //window.addEventListener(\"keyup\", upUpDownDown);\n\n  useEffect(() => {\n    window.addEventListener(\"keyup\", upUpDownDown);\n\n    /*\n    return() => {\n      window.removeEventListener(\"keyup\", upUpDownDown);\n    }\n    */\n  }, [upUpDownDown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      currentScore: currentScore,\n      currentLevel: currentLevel,\n      bestScore: bestScore,\n      codeIsActivated: codeIsActivated,\n      totalLives: totalLives\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      currentCards: currentCards,\n      setCurrentCards: setCurrentCards,\n      incrementCurrentScore: incrementCurrentScore,\n      incrementLevel: incrementLevel,\n      madeAMistake: madeAMistake\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ykpe209ebsoOvMAnnBe+yNUfcsU=\");\n_c = App;\nexport default App;\n\n/*\n  // Add event listener on keyup\n  document.addEventListener(\n    \"keyup\",\n    (event) => {\n      //let name = event.key;\n      let code = event.code;\n\n      if (keyUpCount < konamiCode.data.length - 1) {\n        if (konamiCode.data[keyUpCount] === code) {\n          setKeyUpCount(keyUpCount + 1);\n          //keyUpCount++;\n        } else {\n          setKeyUpCount(0);\n          //keyUpCount = 0;\n        }\n      } else {\n        //setKeyUpCount(0);\n        //keyUpCount = 0;\n        incrementTotalLives();\n      }\n      console.log(keyUpCount + \" \" + codeIsActivated);\n    },\n    false\n  );\n*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Body","Footer","database","konamiCode","jsxDEV","_jsxDEV","App","_s","currentScore","setCurrentScore","bestScore","setBestScore","currentLevel","setLevel","currentCards","setCurrentCards","data","totalLives","setTotalLives","keyUpCount","setKeyUpCount","codeIsActivated","setCodeIsActivated","incrementCurrentScore","updateBestScore","incrementLevel","madeAMistake","initializeGame","console","log","upUpDownDown","event","name","key","code","tempKeyUpCount","length","incrementTotalLives","document","removeEventListener","window","addEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/coder/Documents/The Odin Project/repos/memory-card/react-memory-card/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport database from \"./assets/Database.json\";\nimport konamiCode from \"./assets/KonamiCode.json\";\n\nconst App = () => {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [currentLevel, setLevel] = useState(1);\n  const [currentCards, setCurrentCards] = useState(database.data[0]);\n  const [totalLives, setTotalLives] = useState(1);\n\n  const [keyUpCount, setKeyUpCount] = useState(0);\n  //let keyUpCount = 0;\n  const [codeIsActivated, setCodeIsActivated] = useState(false);\n  //let codeIsActivated = false;\n\n  const incrementCurrentScore = () => {\n    setCurrentScore(currentScore + 1);\n\n    if (currentScore + 1 > bestScore) updateBestScore();\n  };\n\n  const incrementLevel = () => {\n    setCurrentCards(database.data[currentLevel]);\n    setLevel(currentLevel + 1);\n  };\n\n  const updateBestScore = () => {\n    setBestScore(currentScore + 1);\n  };\n\n  const madeAMistake = () => {\n    if (totalLives === 1) {\n      initializeGame();\n    } else {\n      setTotalLives(totalLives - 1);\n    }\n  };\n\n  const initializeGame = () => {\n    console.log(`You Lost at Score: ${currentScore}`);\n\n    //set current Score to 0, set Level to 1, set current Cards to Level 1\n    setCurrentScore(0);\n    setLevel(1);\n    setCurrentCards(database.data[0]);\n  };\n\n  const upUpDownDown = (event) => {\n    let name = event.key;\n    let code = event.code;\n    let tempKeyUpCount = keyUpCount;\n\n    console.log(konamiCode.data[tempKeyUpCount] === code);\n\n    if (tempKeyUpCount < konamiCode.data.length - 1) {\n      console.log(\"check \"+konamiCode.data[tempKeyUpCount]);\n      //if the current code hasn't completed the konami code but hasn't had a mistake yet either\n      if (konamiCode.data[tempKeyUpCount] === code) {\n        tempKeyUpCount++;\n        console.log(tempKeyUpCount)\n        //if the next keyup is the right key for konami code, continue waiting for next key\n      } else {\n        //if the next keyup is the wrong key for konami code, start over\\\n        tempKeyUpCount = 0;\n        console.log(\"bye\");\n      }\n    } else {\n      //if the current code is equal to the konami code\n      tempKeyUpCount = 0;\n      incrementTotalLives();\n      document.removeEventListener(\"keyup\", upUpDownDown);\n      console.log(\"uh uh\")\n    }\n\n    setKeyUpCount(tempKeyUpCount);\n    console.log(tempKeyUpCount+ \" \" + code + \" \" + konamiCode.data[tempKeyUpCount]);\n  };\n\n  const incrementTotalLives = () => {\n    if (!codeIsActivated) {\n      setTotalLives(30);\n      setCodeIsActivated(true);\n      //codeIsActivated = true;\n    }\n  };\n\n  //window.addEventListener(\"keyup\", upUpDownDown);\n\n\n  useEffect(() => {\n    window.addEventListener(\"keyup\", upUpDownDown);\n\n    /*\n    return() => {\n      window.removeEventListener(\"keyup\", upUpDownDown);\n    }\n    */\n  }, [upUpDownDown]);\n\n  return (\n    <div>\n      <Header\n        currentScore={currentScore}\n        currentLevel={currentLevel}\n        bestScore={bestScore}\n        codeIsActivated={codeIsActivated}\n        totalLives={totalLives}\n      />\n      <Body\n        currentCards={currentCards}\n        setCurrentCards={setCurrentCards}\n        incrementCurrentScore={incrementCurrentScore}\n        incrementLevel={incrementLevel}\n        madeAMistake={madeAMistake}\n      />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n\n/*\n  // Add event listener on keyup\n  document.addEventListener(\n    \"keyup\",\n    (event) => {\n      //let name = event.key;\n      let code = event.code;\n\n      if (keyUpCount < konamiCode.data.length - 1) {\n        if (konamiCode.data[keyUpCount] === code) {\n          setKeyUpCount(keyUpCount + 1);\n          //keyUpCount++;\n        } else {\n          setKeyUpCount(0);\n          //keyUpCount = 0;\n        }\n      } else {\n        //setKeyUpCount(0);\n        //keyUpCount = 0;\n        incrementTotalLives();\n      }\n      console.log(keyUpCount + \" \" + codeIsActivated);\n    },\n    false\n  );\n*/\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}