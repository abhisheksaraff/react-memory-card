{"ast":null,"code":"var _jsxFileName = \"/Users/coder/Documents/The Odin Project/repos/memory-card/react-memory-card/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport konamiCode from \"./assets/KonamiCode.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [currentLevel, setLevel] = useState(1);\n  const [currentCards, setCurrentCards] = useState([]);\n  const [totalLives, setTotalLives] = useState(1);\n  const [showAlert, setShowAlert] = useState(false);\n  const [keyUpCount, setKeyUpCount] = useState(0);\n  const [codeIsActivated, setCodeIsActivated] = useState(false);\n  const incrementCurrentScore = () => {\n    setCurrentScore(currentScore + 1);\n    if (currentScore + 1 > bestScore) updateBestScore();\n  };\n  const incrementLevel = () => {\n    refreshCards(currentLevel + 1);\n    setLevel(currentLevel + 1);\n    setShowAlert(false);\n  };\n  const updateBestScore = () => {\n    setBestScore(currentScore + 1);\n  };\n  const madeAMistake = () => {\n    if (totalLives === 1) {\n      restartGame();\n    } else {\n      setTotalLives(totalLives - 1);\n    }\n  };\n  const restartGame = () => {\n    //set current Score to 0, set Level to 1, set current Cards to Level 1, deactivate code, set lives to 1\n    setCurrentScore(0);\n    setLevel(1);\n    refreshCards(1);\n    setCodeIsActivated(false);\n    setTotalLives(1);\n    setShowAlert(true);\n  };\n  const incrementTotalLives = () => {\n    if (!codeIsActivated) {\n      setTotalLives(3);\n      setCodeIsActivated(true);\n    }\n  };\n  const upUpDownDown = event => {\n    if (!codeIsActivated) {\n      let code = event.code;\n\n      //if the current code hasn't completed the konami code but hasn't had a mistake yet either\n      if (keyUpCount < konamiCode.data.length - 1) {\n        //if the next keyup is the right key for konami code, continue waiting for next key\n        if (konamiCode.data[keyUpCount] === code) {\n          setKeyUpCount(keyUpCount + 1);\n        } //if the next keyup is the wrong key for konami code, start over\n        else {\n          setKeyUpCount(0);\n        } //if the current code is equal to the konami code\n      } else {\n        setKeyUpCount(0);\n        incrementTotalLives();\n      }\n    }\n  };\n  const refreshCards = async size => {\n    let tempCards = [];\n\n    //clears screen while loading new cards\n    setCurrentCards([]);\n    for (let i = 0; i < size + 4; i++) {\n      try {\n        let response = await fetch(\"https://picsum.photos/300/\");\n        let picture = await response.url;\n        tempCards.push({\n          picture: picture,\n          name: i + \"\",\n          hasBeenSelected: false\n        });\n      } catch (e) {\n        console.error(e.message);\n      }\n    }\n    setCurrentCards(tempCards);\n  };\n  useEffect(() => {\n    refreshCards(1);\n  }, []);\n  useEffect(() => {\n    window.addEventListener(\"keyup\", upUpDownDown);\n    return () => {\n      window.removeEventListener(\"keyup\", upUpDownDown);\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        currentScore: currentScore,\n        currentLevel: currentLevel,\n        bestScore: bestScore,\n        codeIsActivated: codeIsActivated,\n        totalLives: totalLives\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Body, {\n        currentCards: currentCards,\n        setCurrentCards: setCurrentCards,\n        incrementCurrentScore: incrementCurrentScore,\n        currentLevel: currentLevel,\n        incrementLevel: incrementLevel,\n        madeAMistake: madeAMistake,\n        showAlert: showAlert,\n        setShowAlert: setShowAlert,\n        codeIsActivated: codeIsActivated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JKfVL8W0xVcUBtFFC7m55dhHkiw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Body","Footer","konamiCode","jsxDEV","_jsxDEV","App","_s","currentScore","setCurrentScore","bestScore","setBestScore","currentLevel","setLevel","currentCards","setCurrentCards","totalLives","setTotalLives","showAlert","setShowAlert","keyUpCount","setKeyUpCount","codeIsActivated","setCodeIsActivated","incrementCurrentScore","updateBestScore","incrementLevel","refreshCards","madeAMistake","restartGame","incrementTotalLives","upUpDownDown","event","code","data","length","size","tempCards","i","response","fetch","picture","url","push","name","hasBeenSelected","e","console","error","message","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/coder/Documents/The Odin Project/repos/memory-card/react-memory-card/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Header from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Footer from \"./components/Footer\";\nimport konamiCode from \"./assets/KonamiCode.json\";\n\nconst App = () => {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const [currentLevel, setLevel] = useState(1);\n  const [currentCards, setCurrentCards] = useState([]);\n  const [totalLives, setTotalLives] = useState(1);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [keyUpCount, setKeyUpCount] = useState(0);\n  const [codeIsActivated, setCodeIsActivated] = useState(false);\n\n  const incrementCurrentScore = () => {\n    setCurrentScore(currentScore + 1);\n    if (currentScore + 1 > bestScore) updateBestScore();\n  };\n\n  const incrementLevel = () => {\n    refreshCards(currentLevel + 1);\n    setLevel(currentLevel + 1);\n    setShowAlert(false);\n  };\n\n  const updateBestScore = () => {\n    setBestScore(currentScore + 1);\n  };\n\n  const madeAMistake = () => {\n    if (totalLives === 1) {\n      restartGame();\n    } else {\n      setTotalLives(totalLives - 1);\n    }\n  };\n\n  const restartGame = () => {\n    //set current Score to 0, set Level to 1, set current Cards to Level 1, deactivate code, set lives to 1\n    setCurrentScore(0);\n    setLevel(1);\n    refreshCards(1);\n    setCodeIsActivated(false);\n    setTotalLives(1);\n    setShowAlert(true);\n  };\n\n  const incrementTotalLives = () => {\n    if (!codeIsActivated) {\n      setTotalLives(3);\n      setCodeIsActivated(true);\n    }\n  };\n\n  const upUpDownDown = (event) => {\n    if (!codeIsActivated) {\n      let code = event.code;\n\n      //if the current code hasn't completed the konami code but hasn't had a mistake yet either\n      if (keyUpCount < konamiCode.data.length - 1) {\n        //if the next keyup is the right key for konami code, continue waiting for next key\n        if (konamiCode.data[keyUpCount] === code) {\n          setKeyUpCount(keyUpCount + 1);\n        } //if the next keyup is the wrong key for konami code, start over\n        else {\n          setKeyUpCount(0);\n        } //if the current code is equal to the konami code\n      } else {\n        setKeyUpCount(0);\n        incrementTotalLives();\n      }\n    }\n  };\n\n  const refreshCards = async (size) => {\n    let tempCards = [];\n\n    //clears screen while loading new cards\n    setCurrentCards([]);\n\n    for (let i = 0; i < size + 4; i++) {\n      try {\n        let response = await fetch(\"https://picsum.photos/300/\");\n        let picture = await response.url;\n        tempCards.push({\n          picture: picture,\n          name: i + \"\",\n          hasBeenSelected: false,\n        });\n      } catch (e) {\n        console.error(e.message);\n      }\n    }\n    setCurrentCards(tempCards);\n  };\n\n  useEffect(() => {\n    refreshCards(1);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener(\"keyup\", upUpDownDown);\n\n    return () => {\n      window.removeEventListener(\"keyup\", upUpDownDown);\n    };\n  });\n\n  return (\n    <div className=\"app\">\n      <div className=\"top\">\n        <Header\n          currentScore={currentScore}\n          currentLevel={currentLevel}\n          bestScore={bestScore}\n          codeIsActivated={codeIsActivated}\n          totalLives={totalLives}\n        />\n        <Body\n          currentCards={currentCards}\n          setCurrentCards={setCurrentCards}\n          incrementCurrentScore={incrementCurrentScore}\n          currentLevel={currentLevel}\n          incrementLevel={incrementLevel}\n          madeAMistake={madeAMistake}\n          showAlert={showAlert}\n          setShowAlert={setShowAlert}\n          codeIsActivated={codeIsActivated}\n        />\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}